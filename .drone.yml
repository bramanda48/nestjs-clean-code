---
kind: pipeline
type: docker
name: build-apps

environment:
  IMAGE_NAME: "ghcr.io/bramanda48/nestjs-clean-code"

steps:
  - name: build apps
    image: node:16-alpine
    commands:
      - yarn install
      - yarn build
    when:
      event:
        - push
        - pull_request

  - name: run testing
    image: node:16-alpine
    commands:
      - yarn test
    when:
      event:
        - push
        - pull_request

  - name: build docker image
    image: docker:dind
    commands:
      - export BUILD_AT="$(TZ=":Asia/Jakarta" date '+%Y-%m-%dT%H:%M:%S') (GMT+7)";
      - export BUILD_VERSION="$(awk '/version/{gsub(/("|",)/,"",$2);print $2}' package.json)";
      - docker build
        -f Dockerfile.droneci
        -t "$IMAGE_NAME:$DRONE_TARGET_BRANCH"
        --build-arg REPOSITORY_URL="$DRONE_REPO_LINK"
        --build-arg BUILD_AT="$BUILD_AT"
        --build-arg BUILD_VERSION="$BUILD_VERSION"
        --build-arg BUILD_NUMBER="$DRONE_BUILD_NUMBER"
        --build-arg BRANCH_NAME="$DRONE_TARGET_BRANCH"
        --build-arg BRANCH_COMMIT_SHA="$DRONE_COMMIT_SHA"
        --build-arg BRANCH_COMMIT_MESSAGE="$DRONE_COMMIT_MESSAGE" .
      - docker tag "$IMAGE_NAME:$DRONE_TARGET_BRANCH" "$IMAGE_NAME:$BUILD_VERSION-build.$DRONE_BUILD_NUMBER"
      - docker images
    volumes:
      - name: dockersock
        path: /var/run
    when:
      event:
        - push

  - name: login and upload image to ghcr.io
    image: docker:dind
    commands:
      - docker images
      - echo $DOCKER_REGISTRY_PASSWORD | docker login -u $DOCKER_REGISTRY_USERNAME --password-stdin ghcr.io
      - docker push --all-tags "$IMAGE_NAME"
    volumes:
      - name: dockersock
        path: /var/run
    environment:
      DOCKER_REGISTRY_USERNAME:
        from_secret: DOCKER_REGISTRY_USERNAME
      DOCKER_REGISTRY_PASSWORD:
        from_secret: DOCKER_REGISTRY_PASSWORD
    when:
      event:
        - push

services:
  - name: docker
    image: docker:dind
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}

trigger:
  event:
    exclude:
      - promote
      - rollback
  branch:
    - develop
    - staging
    - main
    - master
